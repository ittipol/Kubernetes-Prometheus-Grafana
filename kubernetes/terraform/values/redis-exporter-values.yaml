# Custom values for redis-exporter 

# If serviceMonitor.multipleTarget is enabled, this configuration is actually not used

# If deploy redis exporter in a same namespace use:
# redisAddress: redis://redis-service:6379

# If deploy redis exporter in a different namespace use:
# redis://{redis_service_name}.{redis_service_namespace}.{Kubernetes_suffix}:{redis_service_port}
redisAddress: redis://redis-service.redis-database.svc.cluster.local:6379

auth:
  # Use password authentication
  enabled: true
  # Use existing secret (ignores redisPassword)
  secret:
    name: "redis-secret"
    key: "REDIS_PASSWORD"
  # Redis password (when not stored in a secret)
  # redisPassword: ""

serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping
  enabled: true
  # Set the namespace the ServiceMonitor should be deployed
  # namespace: database-monitoring
  # Set how frequently Prometheus should scrape
  # interval: 30s
  # Set path to redis-exporter telemtery-path
  # Please set telemetryPath to /scrape if you are using multiple targets
  # telemetryPath: /metrics
  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  labels:
    release: prometheus
  # Set timeout for scrape
  # timeout: 10s
  # Set relabel_configs as per https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
  # relabelings: []
  # Set of labels to transfer on the Kubernetes Service onto the target.
  # targetLabels: []
  # metricRelabelings: []
  # Set tls options
  # scheme: ""
  # tlsConfig: {}